name: Lint and Test Charts

on:
  workflow_dispatch:
  push:
    branches:
      - "renovate/**"
    tags-ignore:
      - "**"
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            changed:
            - 'stable/**'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        if: steps.filter.outputs.changed == 'true'
        with:
          version: v3.9.2

      - uses: actions/setup-python@v2
        if: steps.filter.outputs.changed == 'true'
        with:
          python-version: 3.7

      - name: Set up chart-testing
        if: steps.filter.outputs.changed == 'true'
        uses: helm/chart-testing-action@v2.2.1

      - name: Filter changed files
        if: steps.filter.outputs.changed == 'true'
        run: echo '${{ toJson(steps.filter.outputs) }}' > changes.json

      - name: Changed charts
        if: steps.filter.outputs.changed == 'true'
        id: changed-charts
        run: |
          APPS=$(jq --raw-output '.changed_files | fromjson | .[] |= sub("(?<filepath>(?<first_directory>(?<root1>[\/]?)[^\/]+\/)(?<second_directory>(?<root2>[\/]?)[^\/]+\/)(?<third_directory>(?<root3>[\/]?)[^\/]+)(?<extra_paths>.+))"; "\(.first_directory)\(.second_directory)") | unique' changes.json  |  jq -r '.[]')
          echo "changed apps: ${APPS[*]}"
          echo "changed appsV2: ${APPS[*]%/*}"
          echo "::set-output name=charts::${APPS[*]}"

      - name: Run chart-testing (list-changed)
        if: steps.filter.outputs.changed == 'true'
        id: list-changed
        run: |
          changed=$(ct list-changed --chart-dirs ${{steps.changed-charts.outputs.charts}} --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        if: steps.filter.outputs.changed == 'true'
        run: ct lint --chart-dirs ${{steps.changed-charts.outputs.charts}} --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.filter.outputs.changed == 'true'

      - name: Run chart-testing (install)
        if: steps.filter.outputs.changed == 'true'
        run: ct install --config .github/ct-config.yaml --build-id ${{ github.run_number }} --namespace chart-${{ github.run_number }} --chart-dirs ${{steps.changed-charts.outputs.charts}}
